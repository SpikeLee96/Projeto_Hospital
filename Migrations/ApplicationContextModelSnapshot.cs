// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto_CRUD;

namespace Projeto_CRUD.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Projeto_CRUD.Models.Consulta", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ExameId")
                        .HasColumnType("bigint");

                    b.Property<long>("PacienteId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("ExameId");

                    b.HasIndex("PacienteId");

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.Exame", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("TipoExameId")
                        .HasColumnType("bigint");

                    b.Property<string>("nomeExame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("observacoes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("id");

                    b.HasIndex("TipoExameId");

                    b.ToTable("Exame");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.Paciente", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.TipoExame", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("id");

                    b.ToTable("TipoExame");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.Consulta", b =>
                {
                    b.HasOne("Projeto_CRUD.Models.Exame", "Exame")
                        .WithMany("Consulta")
                        .HasForeignKey("ExameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projeto_CRUD.Models.Paciente", "Paciente")
                        .WithMany("Consulta")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exame");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.Exame", b =>
                {
                    b.HasOne("Projeto_CRUD.Models.TipoExame", "TipoExame")
                        .WithMany("Exame")
                        .HasForeignKey("TipoExameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoExame");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.Exame", b =>
                {
                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.Paciente", b =>
                {
                    b.Navigation("Consulta");
                });

            modelBuilder.Entity("Projeto_CRUD.Models.TipoExame", b =>
                {
                    b.Navigation("Exame");
                });
#pragma warning restore 612, 618
        }
    }
}
